# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
  x-oapi-codegen-middlewares:
    - Middleware
servers:
  - url: http://localhost
paths:
  /hello:
    get:
      summary: This is just a test endpoint to get you started. Please delete this endpoint.
      operationId: hello
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/HelloResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
  /registration:
    post:
      summary: This endpoint is used to register a new user
      operationId: registration
      requestBody: 
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - phone_number
                - full_name
                - password
              properties:
                phone_number:
                  description: The phone number to be registered, should be unique
                  type: string
                full_name:
                  description: The full name to be registered
                  type: string
                password:
                  description: The password to be registered
                  type: string
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessRegistrationResponse"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorsResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
  /login:
    post:
      summary: This endpoint is used to login a user
      operationId: login
      requestBody: 
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - phone_number
                - password
              properties:
                phone_number:
                  description: The phone number to be registered, should be unique
                  type: string
                password:
                  description: The password to be registered
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginSuccessResponse"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
  /profile:
    get:
      summary: Get profile data based on the jwt headers
      operationId: profileGet
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileGetResponse"
        '403':
          description: User Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
    put:
      summary: Update profile data based on the request body and the jwt headers
      operationId: profileUpdate
      security:
        - BearerAuth: []
      requestBody: 
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - phone_number
                - full_name
              properties:
                phone_number:
                  description: The phone number to be updated, should be unique
                  type: string
                full_name:
                  description: The full name to be updated
                  type: string
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicSuccessResponse"
        '409':
          description: Unique properties conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
        '403':
          description: User Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicErrorResponse"
components:
  securitySchemes:
    BearerAuth:
      description: Bearer token using a JWT
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BasicSuccessResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    BasicErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    SuccessRegistrationResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    ValidationError:
      type: object
      required:
        - field
        - message
      properties:
        field:
          type: string
        message:
          type: string
    ValidationErrorsResponse:
      type: array
      items:
        schemas:
        $ref: "#/components/schemas/ValidationError"

    LoginSuccessResponse:
      type: object
      required:
        - message
        - token
      properties:
        message:
          type: string
        token:
          type: string
    ProfileGetResponse:
      type: object
      required:
        - phone_number
        - full_name
      properties:
        phone_number:
          type: string
        full_name:
          type: string
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

